Система команд процессорного устройства разрабатывалась максимально прозрачной
для понимания на уровне машинного кода в своём шестнадцатеричном представлении
как есть визуальным сочетанием своих нибблов в форме элементарных аббревиатур.
Кодирование алгоритма малой степени сложности доступно пользователю с базовыми
навыками редактирования таблиц дампа и не представляет особой сложности в силу
максимально осмысленного кодирования всех инструкций в шестнадцатеричном виде.

------------------------------------------------------------------------------
|Код команд / диапазоны|Группа    |Описания, замечания, комментарий
-----------------------|----------|-------------------------------------------
00                     |HLT       |Прекращение счёта указателем команд IP
20/30/40/50/60/70/80/90|REP 2-9   |Префикс повтора/пропуска операции n-раз
01-99                  |ADD Ri,BCD|Двоично-десятичное накопление в регистр
0A-9F                  |ALU Ri,Tk |Операция АЛУ с комбинацией аргументов
A0-A9 B0-B9 C0-C9 D0-D9|REG Rn    |Установка индекса активного регистра группы
AA-AD BA-BD CA-CD DA-DD|ARG Ri,Tj |Выбор комбинации аргументов операциям АЛУ
AE    BE    CE    DE   |EXT Ri    |Экстракция данных из внешнего ОЗУ в регистр
AF    BF    CF    DF   |FIX Ri    |Фиксация значения регистра во внешнее ОЗУ
E0                     |END       |Завершение с переходом на адрес Базы:Счёта
E1-E7                  |EX0-7     |Переход на адрес 0xE100-0xE700
E8-EF                  |Ecnd      |Выполнение следующей команды по условию
F0-FF                  |FN0-15    |Переход на адрес 0xF000-0xFF00
------------------------------------------------------------------------------
(n - устанавливаемый индекс, указанный битами команды)
(i или j - индекс, установленный раннее)
(k - индекс регистра временно берётся из старшего ниббла кода команды)

Группы регистров A0-A9, B0-B9 и C0-C9 составляют внутренний регистровый файл с
безусловным доступом к ним на программном уровне. Регистры B0-B9 хранят "Базу"
для обращения к памяти блоком в 256 байт, а регистры C0-C9 - счёт байта блока.
Инструкция с кодом F0 помещает текущий адрес указателя инструкций из IP в B0 и
C0, а значения из Bi и Cj помещает в IP, производя переход на адрес Bi:Cj. Тем
самым, можно обращаться к коду подпрограмм и знать адрес возврата через B0:C0.

Группу регистров D0-D9 составляют внешние Device-устройства с непосредственным
использованием в качестве операндов. Не рекомендуется активно использовать эту
группу в любых вычислительных действиях, так как нет гарантии работы программ.

Префикс REP используется для повтора любой операции на нужные n-тактов дольше.
Исключение представляет условная группа Ecnd, которая исполняет n-ую команду в
очереди, если условие ЛОЖНО.

******************************************************************************
* Примеры                                                                    *
******************************************************************************

     AA A1 1E          |EOR  A1,A1  ;Очистка по Исключающему Или (sf pf cf ZF)
     AA A1 2E          |EOR  A1,A2  ;Исключающее Или A1 с A2     (?? ?? ?? ??)
     AB A1 1A          |EOR  A1,B1  ;Исключающее Или A1 с B1     (?? ?? ?? ??)
     AB A1 2A          |EOR  A1,B2  ;Исключающее Или A1 с B2     (?? ?? ?? ??)
     AA A1 1E AB 2A    |MOV  A1,B2  ;Присвоение Исключающим Или  (sf pf cf ZF)
     AA A1 34          |SUM  A1,34  ;Инкремент на константу      (-- -- -- --)
     AA A1 02 34       |SUM  A1,2*34;Расширенный инкремент       (-- -- -- --)
     E4                |CALL 0xE400 ;Вызов подпрограммы
     02 E4             |CALL 0xE402 ;Вызов подпрограммы с пропуском команд
     E0                |RET         ;Возврат из подпрограммы
     30 E0             |RET  3      ;Возврат с переходом на команду #3
     30 EC             |EC   3      ;Условное выполнение по CF по команду #3
******************************************************************************
0000 30 EE A1 A2 A3    |IF ZF THEN {A1 A2 A3} ELSE A3
0005 30 EF A1 A2 A3    |IF ZF THEN A3 ELSE {A1 A2 A3}
000A 30 F1 A1 A2 A3    |GOSUB F103:A1:A2:A3
F103 30 E0             |RETURN TO A3
******************************************************************************

******************************************************************************
* Примечания                                                                 *
******************************************************************************
По Сбросу процессора очищаются все регистры и программа начинает выполняться с
адреса 0000, а сброшенные регистры B0:C0 указывают на аппаратный сигнал Сброса 
без программного останова через формальную инструкцию HLT с переходом по 0000.